function [H, c, r] = harris_corner_detection(image, threshold)

G = gauss2D(1, [3,3]);
emp_const = 0.04;

I_gauss = imfilter(image, G, 'replicate');
[Ix,Iy] = imgradientxy(I_gauss);

Ix_sq = double(Ix).^2;
Iy_sq = double(Iy).^2;
Ixy = Ix .* Iy;

A = imfilter(Ix_sq, G, 'replicate');
C = imfilter(Iy_sq, G, 'replicate');
B = imfilter(Ixy, G, 'replicate');

%fr = [A B];
%sr = [B C];
%Q = [fr; sr];
% H = det(Q)-emp_const*(trace(Q)).^2;

H = (A.*C - B.^2)-emp_const*(A+C).^2;
[rows, cols] = size(H);


neighborhood = H(5-1:5+1, 5-1:5+1)
max(neighborhood, [], 'all')
eq(2.012, 2.012)

% for i = 1:rows 
%     for j = 1:cols
%         if H(i, j) > threshold
%             neighborh = H(i-1:i+1, j-1:j+1);
%             if eq(neighborh(2, 2), max(neighborh, [], 'all')
%             
% 
%     end
% end


end
